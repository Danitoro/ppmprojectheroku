{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTasks.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","href","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","data","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","projectIdentifer","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTasks","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","boardAlgorithm","response","AddProjectTask","dueDate","newTask","console","log","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e3a7bdb2.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"/api/project\", project);\r\n    history.push(\"/dashboard\");\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  const res = await axios.get(\"/api/project/all\");\r\n  dispatch({\r\n    type: GET_PROJECTS,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const getProject = (id, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/project/${id}`);\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (error) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      \"are you sure? This will delete the project and all the data related to it\"\r\n    )\r\n  )\r\n    await axios.delete(`/api/project/${id}`);\r\n  dispatch({\r\n    type: DELETE_PROJECT,\r\n    payload: id,\r\n  });\r\n};\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for BACKLOG ACTIONS\r\n\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/projectActions\";\r\n\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <a href=\"\">\r\n                  <li\r\n                    className=\"list-group-item delete\"\r\n                    onClick={this.onDeleteClick.bind(\r\n                      this,\r\n                      project.projectIdentifier\r\n                    )}\r\n                  >\r\n                    <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\r\n                  </li>\r\n                </a>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/AddProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from \"react\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map(project => (\r\n                <ProjectItem key={project.id} project={project} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project: state.project\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\r\n","import axios from \"axios\"\r\n\r\nconst setJWTToken = token => {\r\n    if(token){\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n    } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"]\r\n    }\r\n};\r\n\r\nexport default setJWTToken;","import React, { Component } from 'react'\r\nimport axios from \"axios\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\r\nimport setJWTToken from '../securityUtils/setJWTToken';\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch =>{\r\n    try{\r\n        await axios.post (\"/api/users/register\", newUser);\r\n        history.push(\"/login\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload : {}\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const login = LoginRequest => async dispatch =>{\r\n\r\n    try{\r\n        // post => Login Request\r\n        const res = await axios.post(\"/api/users/login\", LoginRequest);\r\n        // extract token from res.data\r\n        const {token} = res.data;\r\n        // store the token in the localStorage\r\n        localStorage.setItem(\"jwtToken\", token)\r\n        // set our token in header ***\r\n        setJWTToken(token)\r\n        // decode token on react\r\n        const decoded = jwt_decode(token);\r\n        // dispatch to our securityReducer \r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n        })\r\n\r\n    }\r\n    catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        })\r\n    }\r\n\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\")\r\n    setJWTToken(false)\r\n\r\n}\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../actions/securityActions\";\r\n\r\nclass Header extends Component {\r\n\r\n  logout(){\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n\r\n  render() {\r\n\r\n    const {validToken, user} = this.props.security\r\n\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  Dashboard\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  <i className = \"fas fa-user-circle.mr-1\"/> \r\n                  {user.fullName}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/logout\" onClick={this.logout.bind(this)}>\r\n                  Logout\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n    );\r\n\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n    )\r\n\r\n    let headerLinks;\r\n\r\n    if(validToken && user){\r\n      headerLinks = userIsAuthenticated;\r\n    }else{\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n    \r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            Personal Project Management Tool\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps, \r\n  {logout}\r\n)(Header);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProject } from \"../../actions/projectActions\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    //Here we declare the props of the state of our component\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {}\r\n    };\r\n\r\n    //When onChange or onSubmit is called then its method is triggered\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  //If errors is modified then the next method is triggered and the state is setted up with the new data\r\n  //life cycle hooks but deprecated\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date\r\n    };\r\n\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectIdentifier\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.description\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"start_date\"\r\n                    value={this.state.start_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"end_date\"\r\n                    value={this.state.end_date}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS } from \"../actions/types\";\r\nimport { GET_PROJECT } from \"../actions/types\";\r\nimport { DELETE_PROJECT } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifer !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload)\r\n\r\n        //TO_DO\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {SET_CURRENT_USER} from \"../actions/types\"\r\n\r\nconst initialState = {\r\n    validToken: false,\r\n    user: {} \r\n};\r\n\r\nconst booleanActionPayload = payload =>{\r\n    if(payload){\r\n        return true\r\n    }\r\n    else{\r\n        return false\r\n    }\r\n}\r\n\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n        return {\r\n            ...state,\r\n            validToken: booleanActionPayload(action.payload),\r\n            user: action.payload\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n    }\r\n    ","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\")&&ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n      applyMiddleware(...middleware),\r\n      ReactReduxDevTools\r\n      \r\n    )\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  //set state\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      start_date: \"\",\r\n      end_date: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  //las funciones que se definen a continuación son propias de react y cada una tiene su funcionalidad\r\n\r\n  //esta funcion es para añadir la información en la pagina desde el reducer\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    } = nextProps.project;\r\n\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      start_date,\r\n      end_date,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id, this.props.history);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      start_date: this.state.start_date,\r\n      end_date: this.state.end_date,\r\n    };\r\n\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">\r\n                Create / Edit Project form\r\n              </h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg \", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.start_date,\r\n                    })}\r\n                    name=\"start_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.start_date}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.end_date,\r\n                    })}\r\n                    name=\"end_date\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.end_date}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  createProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ProjectTasks extends Component {\r\n\r\n  onDeleteClick(backlog_id, pt_id){\r\n    this.props.deleteProjectTask(backlog_id, pt_id)\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    }\r\n    if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    }\r\n    if (project_task.priority === 3) {\r\n      priorityClass = \"bg-success text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className=\"card mb-1 bg-light\">\r\n        <div className={`card-header text-primary ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n          <button className=\"btn btn-danger ml-4\" onClick = {this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>Delete</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nProjectTasks.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null,{deleteProjectTask})(ProjectTasks);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK } from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id, project_task, history) => async (\r\n  dispatch\r\n) => {\r\n  console.log(\"project task: \" + project_task)\r\n  try {\r\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\n//Cuando hacemos la llamada a la API necesitamos colocar el backlog_id en el final de la url:\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_BACKLOG,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\r\n    dispatch({\r\n      type: GET_PROJECT_TASK,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    history.push(\"/dashboard\");\r\n  }\r\n};\r\n\r\nexport const updateProjectTask = (\r\n  backlog_id,\r\n  pt_id,\r\n  project_task,\r\n  history\r\n) => async dispatch => {\r\n  try {\r\n    await axios.patch(\r\n      `/api/backlog/${backlog_id}/${pt_id}`,\r\n      project_task\r\n    );\r\n    history.push(`/projectBoard/${backlog_id}`);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\r\n  if(window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)){\r\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`)\r\n    dispatch({\r\n      type: DELETE_PROJECT_TASK,\r\n      payload: pt_id\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport ProjectTasks from \"./ProjectTasks/ProjectTasks\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTasks key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status === \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {todoItems}\r\n            {\r\n              // insert tasks\r\n            }\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {inProgressItems}\r\n            {/*<!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n\r\n                  <!-- SAMPLE PROJECT TASK ENDS HERE -->*/}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n            {/*\r\n                   <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n\r\n                  <!-- SAMPLE PROJECT TASK ENDS HERE -->   \r\n                  */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../../actions/backlogActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  //constructor to handler errors\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n  // estoy hay que cambiarlo porque en la versión de react nueva da problemas\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      debugger;\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (project_tasks) => {\r\n      if (project_tasks.length < 1 || project_tasks.length == null) {\r\n        if (project_tasks.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {project_tasks.projectNotFound}\r\n            </div>\r\n          );\r\n          }else if (project_tasks.projectIdentifier) {\r\n            return (\r\n              <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                {project_tasks.projectIdentifier}\r\n              </div>\r\n            );\r\n        }else{\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              No project Tasks on this board\r\n            </div>\r\n          );\r\n        } \r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n\r\n    BoardContent = boardAlgorithm(project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\n// para conectar esto con el store modifico esto export default ProjectBoard; por esto:\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/backlogActions\";\r\nimport propTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: 0,\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    console.log(\"dueDate: \" + this.state.dueDate)\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">\r\n                Add / Update Project Task\r\n              </h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: propTypes.func.isRequired,\r\n  errors: propTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/backlogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectSequence: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: \"\",\r\n      create_At : \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\r\n  }\r\n\r\n componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors)\r\n    {\r\n      this.setState({errors: nextProps.errors});\r\n    }\r\n    const {\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At,\r\n    } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      projectSequence,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n      create_At\r\n    });\r\n  } \r\n  \r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const UpdateProjectTask = {\r\n      id: this.state.id,\r\n      projectSequence: this.state.projectSequence,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      create_At: this.state.create_At\r\n    };\r\n    this.props.updateProjectTask(\r\n      this.state.projectIdentifier,\r\n      this.state.projectSequence,\r\n      UpdateProjectTask,\r\n      this.props.history\r\n    );\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier}  Project Task\r\n                ID: {this.state.projectSequence}{\" \"}\r\n              </p>\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask , updateProjectTask})(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n    \r\n    componentDidMount(){\r\n        if(this.props.security.validToken){\r\n            this.props.history.push(\"/dashboard\")\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n            <div className=\"light-overlay landing-inner text-dark\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-12 text-center\">\r\n                            <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\r\n                            <p className=\"lead\">\r\n                                Create your account to join active projects or start you own\r\n                            </p>\r\n                            <hr />\r\n                            <Link className = \"btn btn-lg btn-primary mr-2\" to = \"/register\">\r\n                                Sign Up          \r\n                            </Link>\r\n                            <Link className=\"btn btn-lg btn-secondary mr-2\" to = \"/login\">\r\n                                Login\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state =>({\r\n    security: state.security\r\n})\r\nexport default connect (mapStateToProps)(Landing);","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/securityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      fullName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullName: this.state.fullName,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword\r\n    };\r\n\r\n    this.props.createNewUser(newUser, this.props.history);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullName\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullName\"\r\n                    value={this.state.fullName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullName && (\r\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username\r\n                    })}\r\n                    placeholder=\"Email Address (Username)\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  security: state.security\r\n});\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createNewUser }\r\n)(Register);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/securityActions\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n      if(nextProps.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n      }\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LoginRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password\r\n    };\r\n\r\n    this.props.login(LoginRequest);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  componentDidMount(){\r\n      if(this.props.security.validToken){\r\n          this.props.history.push(\"/dashboard\")\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  security: state.security,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { login }\r\n)(Login);","import React, { Component } from 'react'\r\nimport {Route, Redirect} from \"react-router-dom\"\r\nimport {connect} from \"react-redux\" \r\nimport PropTypes from \"prop-types\"\r\n\r\n{/*this import allow us to connect to our state for knowing wether or not an user is logged in*/}\r\n\r\n//This method is for redirecting to login if the user has not a valid token which means wether or not the person is authenticated, \r\n//if true: load the component if not redirect to login, for example somebody is trying to access to /dashboard without authentication user process done previously \r\nconst SecuredRoute = ({component:Component, security, ...otherProps}) => (\r\n    <Route \r\n    {...otherProps} \r\n        render = {props => \r\n            security.validToken === true?(\r\n                <Component {...props}/>\r\n            ) : (\r\n            <Redirect to=\"/login\"/>\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired   \r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    security: state.security\r\n});\r\n\r\nexport default connect(mapStateToProps)(SecuredRoute)\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Header from \"./components/Layout/Header\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from \"./components/Project/AddProject\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport UpdateProject from \"./components/Project/UpdateProject\";\r\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\r\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\r\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\r\nimport Landing from \"./components/Layout/Landing\";\r\nimport Register from \"./components/UserManagement/Register\";\r\nimport Login from \"./components/UserManagement/Login\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWTToken from \"./securityUtils/setJWTToken\";\r\nimport { SET_CURRENT_USER } from \"./actions/types\";\r\nimport {logout} from \"./actions/securityActions\";\r\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\r\n\r\n\r\nconst jwtToken = localStorage.jwtToken;\r\n\r\nif(jwtToken){\r\n  setJWTToken(jwtToken)\r\n  const decoded_jwtToken = jwt_decode(jwtToken)\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_jwtToken\r\n  });\r\n  const currentTime = Date.now()/1000;\r\n  if(decoded_jwtToken.exp < currentTime){\r\n    store.dispatch(logout())\r\n    window.location.href = \"/\";\r\n\r\n\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header />\r\n            {\r\n              //Public Routes\r\n            }\r\n            <Route exact path=\"/\" component = {Landing}/> \r\n            <Route exact path= \"/register\" component = {Register}/>\r\n            <Route exact path= \"/login\" component = {Login}/>\r\n            {\r\n              //Private Routes\r\n            }\r\n            <Switch>\r\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\r\n            <SecuredRoute exact path=\"/AddProject\" component={AddProject} />\r\n            <SecuredRoute exact path=\"/UpdateProject/:id\" component={UpdateProject} />\r\n            <SecuredRoute exact path=\"/ProjectBoard/:id\" component={ProjectBoard} />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/addProjectTask/:id\"\r\n              component={AddProjectTask}\r\n            />\r\n            <SecuredRoute\r\n              exact\r\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\r\n              component={UpdateProjectTask}\r\n            />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}